{"version":3,"sources":["components/AppNavbar.js","components/Layout.js","store/actions/removeFromBookmark.js","store/actions/actionTypes.js","pages/Home.js","store/actions/removeContact.js","store/actions/addToBookmark.js","pages/Add.js","store/actions/addContact.js","pages/Bookmarks.js","store/reducers/contactReducer.js","store/reducers/bookmarkReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["Example","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","tag","Link","to","React","Component","Layout","Fragment","AppNavbar_Example","children","removeFromBookmark","id","type","payload","Home","isBookmarked","bookmarks","find","removeContact","contact","window","confirm","console","log","_this2","Layout_Layout","contacts","map","Card","key","CardHeader","name","CardBody","email","phone","CardFooter","Button","addToBookMark","connect","objectSpread","Add","errors","onSubmit","_callee","e","regenerator_default","wrap","_context","prev","next","preventDefault","keys","isEmpty","concat","isEmail","length","addContact","history","push","stop","onChange","target","value","FormGroup","Input","placeholder","invalid","FormFeedback","v4","BookMarks","reducer","arguments","undefined","_ref","toConsumableArray","index","findIndex","splice","newData","filter","bookmark","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","render","es","BrowserRouter","Switch","Route","exact","path","component","Bookmarks","document","querySelector"],"mappings":"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","file":"static/js/main.f7bdb723.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n} from 'reactstrap'\n\nexport default class Example extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.toggle = this.toggle.bind(this)\n        this.state = {\n            isOpen: false,\n        }\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    render() {\n        return (\n            <div>\n                <Navbar color=\"danger\" dark expand=\"md\">\n                    <NavbarBrand href=\"/\">Contact Manager</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/\">\n                                    Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/add\">\n                                    New Contact\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/bookmarks\">\n                                    Bookmarks\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nimport AppNavbar from './AppNavbar'\n\n// import {} from 'reactstrap'\n\nexport default class Layout extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <AppNavbar />\n                <div className=\"container py-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-10 mx-auto\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <p>Footer text</p>\n            </React.Fragment>\n        )\n    }\n}\n","import { REMOVE_BOOKMARK } from './actionTypes'\n\nexport const removeFromBookmark = id => ({ type: REMOVE_BOOKMARK, payload: id })\n","export const ADD_CONTACT = 'ADD_CONTACT'\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT'\nexport const EDIT_CONTACT = 'EDIT_CONTACT'\nexport const ADD_BOOKMARK = 'ADD_BOOKMARK'\nexport const REMOVE_BOOKMARK = 'REMOVE_BOOKMARK'\n","import React, { Component } from 'react'\nimport Layout from '../components/Layout'\n\nimport { connect } from 'react-redux'\n\nimport { Card, CardHeader, CardBody, CardFooter, Button } from 'reactstrap'\nimport { removeContact } from '../store/actions/removeContact'\nimport { addToBookMark } from '../store/actions/addToBookmark'\nimport { removeFromBookmark } from '../store/actions/removeFromBookmark'\n\nclass Home extends Component {\n    componentDidMount() {\n        console.log('Hello')\n    }\n\n    isBookmarked = id => {\n        return this.props.bookmarks.find(bookmarks => bookmarks.id === id)\n            ? true\n            : false\n    }\n\n    removeContact = contact => {\n        if (window.confirm('Sure to delete?')) {\n            this.props.removeContact(contact.id)\n            this.props.removeFromBookmark(contact.id)\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <h1>Contacts</h1>\n                {this.props.contacts.map(contact => (\n                    <Card className=\"my-3\" key={contact.id}>\n                        <CardHeader>{contact.name}</CardHeader>\n                        <CardBody>\n                            <p>Name: {contact.name}</p>\n                            <p>Email: {contact.email}</p>\n                            <p>Phone: {contact.phone}</p>\n                        </CardBody>\n                        <CardFooter>\n                            <Button\n                                color={\n                                    this.isBookmarked(contact.id)\n                                        ? `primary`\n                                        : `secondary`\n                                }\n                                onClick={() =>\n                                    this.props.addToBookMark(contact)\n                                }\n                            >\n                                <i className=\"fa fa-heart\" />\n                            </Button>\n                            <Button\n                                color=\"danger\"\n                                className=\"ml-2\"\n                                onClick={() => this.removeContact(contact)}\n                            >\n                                <i className=\"fa fa-times\" />\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                ))}\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ ...state }),\n    { removeContact, addToBookMark, removeFromBookmark }\n)(Home)\n","import { REMOVE_CONTACT } from './actionTypes'\n\nexport const removeContact = id => ({ type: REMOVE_CONTACT, payload: id })\n","import { ADD_BOOKMARK } from './actionTypes'\n\nexport const addToBookMark = contact => ({\n    type: ADD_BOOKMARK,\n    payload: contact,\n})\n","import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport { FormGroup, Input, Label, FormFeedback, Button } from 'reactstrap'\n\nimport { connect } from 'react-redux'\nimport { addContact } from '../store/actions/addContact'\n\nimport { isEmail, isEmpty } from 'validator'\n\nclass Add extends Component {\n    state = {\n        contact: {\n            name: '',\n            email: '',\n            phone: '',\n        },\n        errors: {},\n    }\n\n    onSubmit = async e => {\n        e.preventDefault()\n\n        //TODO: async validation\n        const errors = {}\n\n        Object.keys(this.state.contact).map(key => {\n            if (isEmpty(this.state.contact[key])) {\n                return (errors[key] = `${key} can't be empty`)\n            }\n            key === 'email' &&\n                !isEmail(this.state.contact[key]) &&\n                (errors[key] = `${key} is not a valid email address`)\n        })\n        this.setState({ errors })\n\n        // TODO: how it works?\n        if (Object.keys(errors).length === 0) {\n            this.props.addContact(this.state.contact)\n            this.props.history.push('/')\n        }\n\n        // this.props.addContact(this.state.contact)\n        // this.props.history.push('/')\n    }\n\n    onChange = e => {\n        const contact = { ...this.state.contact }\n        contact[e.target.name] = e.target.value\n\n        this.setState({ contact })\n    }\n\n    render() {\n        return (\n            <Layout>\n                <div className=\"py-3\">\n                    <h2 className=\"text-uppercase\">Add new contact</h2>\n                </div>\n                <form onSubmit={this.onSubmit}>\n                    {Object.keys(this.state.contact).map(key => (\n                        <FormGroup key={key}>\n                            <Input\n                                onChange={this.onChange}\n                                placeholder={key}\n                                // type={key === 'email' ? 'email' : 'text'}\n                                type={`text`}\n                                name={key}\n                                invalid={\n                                    Object.keys(this.state.errors).length &&\n                                    this.state.errors[key]\n                                        ? true\n                                        : false\n                                }\n                            />\n                            {this.state.errors[key] && (\n                                <FormFeedback>\n                                    {this.state.errors[key]}\n                                </FormFeedback>\n                            )}\n                        </FormGroup>\n                    ))}\n                    <Button color=\"danger\">Save</Button>\n                </form>\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    { addContact }\n)(Add)\n","import { ADD_CONTACT } from './actionTypes'\nimport { v4 } from 'uuid'\nexport const addContact = contact => ({\n    type: ADD_CONTACT,\n    payload: { id: v4(), ...contact },\n})\n","import React, { Component } from 'react'\nimport Layout from '../components/Layout'\nimport { Card, CardHeader, CardBody, CardFooter, Button } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { removeFromBookmark } from '../store/actions/removeFromBookmark'\nclass BookMarks extends Component {\n    render() {\n        return (\n            <Layout>\n                <h1>Bookmarks</h1>\n                <h3>Total bookmarks: {this.props.bookmarks.length}</h3>\n\n                {this.props.bookmarks.map(contact => (\n                    <Card className=\"my-3\" key={contact.id}>\n                        <CardHeader>{contact.name}</CardHeader>\n                        <CardBody>\n                            <p>Name: {contact.name}</p>\n                            <p>Email: {contact.email}</p>\n                            <p>Phone: {contact.phone}</p>\n                        </CardBody>\n                        <CardFooter>\n                            <Button\n                                color=\"secondary\"\n                                onClick={() =>\n                                    this.props.addToBookMark(contact)\n                                }\n                            >\n                                <i className=\"fa fa-heart\" />\n                            </Button>\n                            <Button\n                                color=\"danger\"\n                                className=\"ml-2\"\n                                onClick={() =>\n                                    window.confirm('Sure to delete?') &&\n                                    this.props.removeFromBookmark(contact.id)\n                                }\n                            >\n                                <i className=\"fa fa-times\" />\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                ))}\n            </Layout>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ ...state }),\n    { removeFromBookmark }\n)(BookMarks)\n","import {\n    ADD_CONTACT,\n    REMOVE_CONTACT,\n    EDIT_CONTACT,\n} from '../actions/actionTypes'\n\nconst contacts = [\n    {\n        id: '145dsds',\n        name: 'name1',\n        email: 'user1@exampl.com',\n        phone: '123456',\n    },\n    {\n        id: '145ghfgdsds',\n        name: 'name2',\n        email: 'user1@exampl.com',\n        phone: '123456',\n    },\n    {\n        id: '145dsdfghdfs',\n        name: 'name3',\n        email: 'user1@exampl.com',\n        phone: '123456',\n    },\n    {\n        id: '145dsdgghghfhfgs',\n        name: 'name4',\n        email: 'user1@exampl.com',\n        phone: '123456',\n    },\n]\n\nconst reducer = (state = contacts, { type, payload }) => {\n    switch (type) {\n        case ADD_CONTACT: {\n            return [payload, ...state]\n        }\n        case REMOVE_CONTACT: {\n            // id -> payload\n            const contacts = [...state]\n            const index = contacts.findIndex(contact => contact.id === payload)\n            contacts.splice(index, 1)\n            return contacts\n        }\n        case EDIT_CONTACT: {\n            // payload: { id , newdata }\n            const contacts = [...state]\n            const index = contacts.findIndex(\n                contact => contact.id === payload.id\n            )\n            contacts[index] = payload.newData\n            return contacts\n        }\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import { ADD_BOOKMARK, REMOVE_BOOKMARK } from '../actions/actionTypes'\n\nconst reducer = (state = [], { type, payload }) => {\n    switch (type) {\n        case ADD_BOOKMARK: {\n            const bookmarks = [...state]\n            const exits = bookmarks.filter(\n                bookmark => bookmark.id === payload.id\n            ).length\n                ? true\n                : false\n\n            if (exits) {\n                const index = bookmarks.findIndex(\n                    contact => contact.id === payload.id\n                )\n                bookmarks.splice(index, 1)\n                return bookmarks\n            }\n\n            return [payload, ...state]\n        }\n        case REMOVE_BOOKMARK: {\n            const bookmarks = [...state]\n            const index = bookmarks.findIndex(contact => contact.id === payload)\n            bookmarks.splice(index, 1)\n            return bookmarks\n        }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import { combineReducers } from 'redux'\n\nimport contacts from './contactReducer'\nimport bookmarks from './bookmarkReducer'\n\nconst rootReducer = combineReducers({ contacts, bookmarks })\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n","import React from 'react'\nimport { render } from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport Home from './pages/Home'\nimport Add from './pages/Add'\nimport Bookmarks from './pages/Bookmarks'\n\nimport store from './store'\n\nrender(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/add\" component={Add} />\n                <Route exact path=\"/bookmarks\" component={Bookmarks} />\n            </Switch>\n        </BrowserRouter>\n    </Provider>,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}